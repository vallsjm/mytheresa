# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Core\:
        resource: '../src/Core/'

    Core\Ui\Http\:
        resource: '../src/Core/Ui/Http/'
        tags: ['controller.service_arguments']

    Core\Application\UseCase\CalculateProductDiscountUseCase:
        arguments:
            $discountRules:
                - '@Core\Application\DiscountRules\GetDiscountInProductsWithBootsCategory'
                - '@Core\Application\DiscountRules\GetDiscountInProductsWithSkuEquals3'

    Shared\:
        resource: '../src/Shared/'

    Shared\Infrastructure\Service\ResponseService:
        arguments:
            $exceptionMapping:
                - { class: 'Core\Domain\Exception\ProductAlreadyExistsException', code: 400 }
                - { class: 'Core\Domain\Exception\ProductNotFoundException', code: 404 }
                - { class: 'Core\Domain\Exception\ProductBadRequestException', code: 400 }

    App\:
        resource: '../src/'
        exclude:
            - '../src/Core/'
            - '../src/Shared/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
